@page "/Perfil"
@inject DialogService DialogService

<PageTitle>Perfil</PageTitle>
<head>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">

</head>

<div class="col-md-5 p-2">


   

    <RadzenCard>
        <i class="bi bi-bell"></i>
        <i class="bi bi-person-circle " style="font-size: 4em;color:brown"> </i>
        <h5>Carlos javier </h5>
   


       

        <RadzenUpload Url="upload/single" Icon="upload" ChooseText=">Agregar<" Progress=@(args => OnProgress(args, "Upload with icon"))>


          
        </RadzenUpload>
        <i class="bi bi-gear">Ajuste</i>

       

        <RadzenText Text="Cambiar Escala de grices" TextStyle="TextStyle.Subtitle2"></RadzenText>
        <RadzenSwitch @bind-Value=@value Change=@(args => OnChange(args, "Switch")) />


       



    </RadzenCard>


    <RadzenCard Style="background-color:deepskyblue;">

        <RadzenButton Icon="help" Click=@(args => OnClick("Secondary button")) Text="Ayuda" ButtonStyle="ButtonStyle.Success" />


        <RadzenButton Icon="change_history" Click=@(args => OnClick("Secondary button")) Text="Historial" ButtonStyle="ButtonStyle.Success" />



        <RadzenButton Text="@tex" ButtonStyle="ButtonStyle.Secondary" Icon="delete" IsBusy=@busy Click=@(args => DialogService.Confirm("Estas seguro", "Eliminar?", new ConfirmOptions()
                      { OkButtonText = "SI" , CancelButtonText = "NO" }))></RadzenButton>


        <RadzenButton Text="@text" style="width: 160px" Icon="save" IsBusy=@busy Click=@(args => DialogService.Confirm("Estas seguro Actualizar tu datos?", "Guarda?", new ConfirmOptions()
                      { OkButtonText = "SI" , CancelButtonText = "NO" }))></RadzenButton>

    </RadzenCard>

   
</div>


@code{

    bool busy;
    string text = "Guardar";
    string tex = "Eliminar";



    void OnProgress(UploadProgressArgs args, string name)
    {
        Console.Write($"{args.Progress}% '{name}' / {args.Loaded} of {args.Total} bytes.");

        if (args.Progress == 100)
        {
            foreach (var file in args.Files)
            {
                Console.Write($"Uploaded: {file.Name} / {file.Size} bytes");
            }
        }
    }

    void OnComplete(UploadCompleteEventArgs args)
    {
        Console.Write($"Server response: {args.RawResponse}");
    }

    void OnClick(string buttonName)
    {
        Console.Write($"{buttonName} clicked");
    }



            bool value;
            bool disabledValue = true;

            //EventConsole console;

            void OnChange(bool? value, string name)
            {
                Console.Write($"{name} value changed to {value}");
            }
}



